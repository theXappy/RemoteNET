<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFramework>net7.0-windows</TargetFramework>
		<NoWin32Manifest>true</NoWin32Manifest>
		<Company>theXappy</Company>
		<Description>Examine, create and interact with remote objects in other .NET processes.</Description>
		<Copyright>theXappy Â©2021</Copyright>
		<PackageProjectUrl>https://github.com/theXappy/RemoteNET</PackageProjectUrl>
		<PackageIcon>nuget_icon.png</PackageIcon>
		<RepositoryUrl>https://github.com/theXappy/RemoteNET</RepositoryUrl>
		<PackageTags>reverse-engineer;forensics;clrmd;remoting;low-level</PackageTags>
		<PackageLicenseExpression>GPL-2.0-only</PackageLicenseExpression>
		<RunPostBuildEvent>Always</RunPostBuildEvent>
		<Version>1.0.4.7</Version>
		<AssemblyVersion>1.0.4.7</AssemblyVersion>
		<FileVersion>1.0.4.7</FileVersion>
		<LangVersion>Latest</LangVersion>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="InjectableDotNetHost.Injector" Version="1.0.12" />
		<PackageReference Include="Microsoft.CSharp" Version="4.7.0" />
		<PackageReference Include="System.IO.FileSystem.AccessControl" Version="5.0.0" />
		<PackageReference Include="System.Security.AccessControl" Version="6.0.1" />
		<PackageReference Include="Vanara.PInvoke.IpHlpApi" Version="4.0.4" />
	</ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\RemoteNET.Common\RemoteNET.Common.csproj" />
		<ProjectReference Include="..\ScubaDiver.API\ScubaDiver.API.csproj" />
	</ItemGroup>

	<ItemGroup>
		<Compile Update="Properties\Resources.Designer.cs">
			<DesignTime>True</DesignTime>
			<AutoGen>True</AutoGen>
			<DependentUpon>Resources.resx</DependentUpon>
		</Compile>
	</ItemGroup>

	<ItemGroup>
		<EmbeddedResource Update="Properties\Resources.resx">
			<Generator>ResXFileCodeGenerator</Generator>
			<LastGenOutput>Resources.Designer.cs</LastGenOutput>
		</EmbeddedResource>
	</ItemGroup>

	<ItemGroup>
		<None Update="nuget_icon.png">
			<Pack>True</Pack>
			<PackagePath>\</PackagePath>
		</None>
	</ItemGroup>

	<Target Name="CopyDlls" BeforeTargets="BeforeBuild">
		<ItemGroup>
			<CopyOperations Include="$(SolutionDir)\dist\$(Configuration)\Win32\**\*.exe;$(SolutionDir)\dist\$(Configuration)\Win32\**\*.dll;$(SolutionDir)\dist\$(Configuration)\Win32\**\*.pdb">
				<DestinationFolder>$(ProjectDir)\Resources\%(RecursiveDir)</DestinationFolder>
			</CopyOperations>
			<CopyOperations Include="$(SolutionDir)\dist\$(Configuration)\x64\**\*.exe;$(SolutionDir)\dist\$(Configuration)\x64\**\*.dll;$(SolutionDir)\dist\$(Configuration)\x64\**\*.pdb">
				<DestinationFolder>$(ProjectDir)\Resources\%(RecursiveDir)</DestinationFolder>
			</CopyOperations>
			<CopyOperations Include="$(ProjectDir)\..\InjectableDummy\bin\$(Configuration)\net6.0-windows\**\*">
				<DestinationFolder>$(ProjectDir)\Resources\%(RecursiveDir)</DestinationFolder>
			</CopyOperations>
		</ItemGroup>
		<Message Text="[~] Copying resources" Importance="high" />
		<Message Text="[~] Resources List: @(CopyOperations)" Importance="high" />
		<Copy SourceFiles="@(CopyOperations)" DestinationFolder="%(CopyOperations.DestinationFolder)" />
	</Target>
	
	<Target Name="ZipFolders" BeforeTargets="BeforeBuild">
		<ItemGroup>
			<ZipOperations Include="$(ProjectDir)\..\Lifeboat\bin\$(Configuration)\net6.0-windows">
				<ZipFileName>$(ProjectDir)\Resources\Lifeboat.zip</ZipFileName>
			</ZipOperations>
			<ZipOperations Include="$(SolutionDir)\dist\$(Configuration)\ScubaDivers">
				<ZipFileName>$(ProjectDir)\Resources\ScubaDivers.zip</ZipFileName>
			</ZipOperations>
			<!-- Detours - choose one of 2 directories based on configuration -->
			<ZipOperations Include="$(ProjectDir)\..\detours_build\bin\$(Configuration)" Condition="'$(Configuration)' == 'Debug'">
				<ZipFileName>$(ProjectDir)\Resources\DetoursNet.zip</ZipFileName>
			</ZipOperations>
			<ZipOperations Include="$(ProjectDir)\..\detours_build\bin\RelWithDebInfo" Condition="'$(Configuration)' == 'Release'">
				<ZipFileName>$(ProjectDir)\Resources\DetoursNet.zip</ZipFileName>
			</ZipOperations>
		</ItemGroup>
		<Message Text="[~] Zip Op: @(ZipOperations)" Importance="high" />
		<ZipDirectory SourceDirectory="@(ZipOperations)" DestinationFile="%(ZipOperations.ZipFileName)" Overwrite="true" />
	</Target>

	<Target Name="DeleteDebugSymbolFile" AfterTargets="Build">
		<ItemGroup>
			<FilesToDelete Include="$(ProjectDir)\Resources\*.exe" />
			<FilesToDelete Include="$(ProjectDir)\Resources\*.dll" />
			<FilesToDelete Include="$(ProjectDir)\Resources\*.pdb" />
			<FilesToDelete Include="$(ProjectDir)\Resources\*.json" />
			<FilesToDelete Include="$(ProjectDir)\Resources\*.zip" />
		</ItemGroup>
		<Message Text="[~] Cleaning up copied Resources" Importance="high" />
		<Message Text="[~] Deleting Files: @(FilesToDelete)" Importance="high" />
		<Delete Files="@(FilesToDelete)" />
	</Target>

	<ItemGroup>
	  <NativeLibs Remove="RemoteAppFactory.cs" />
	</ItemGroup>

	<ItemGroup>
	  <NativeLibs Remove="ManagedRemoteApp.cs" />
	</ItemGroup>

</Project>
