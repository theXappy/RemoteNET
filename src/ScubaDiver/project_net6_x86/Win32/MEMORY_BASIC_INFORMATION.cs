// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#pragma warning disable CS1591,CS1573,CS0465,CS0649,CS8019,CS1570,CS1584,CS1658,CS0436
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using global::System.Runtime.Versioning;
    using win32 = global::Windows.Win32;

    namespace System.Memory
    {
        /// <summary>Contains information about a range of pages in the virtual address space of a process.</summary>
        /// <remarks>
        /// <para>To enable a debugger to debug a target that is running on a different architecture (32-bit versus 64-bit), use one of the explicit forms of this structure.</para>
        /// <para></para>
        /// <para>This doc was truncated.</para>
        /// <para><see href="https://docs.microsoft.com/windows/win32/api//winnt/ns-winnt-memory_basic_information#">Read more on docs.microsoft.com</see>.</para>
        /// </remarks>
        public partial struct MEMORY_BASIC_INFORMATION
        {
            /// <summary>A pointer to the base address of the region of pages.</summary>
            public unsafe void* BaseAddress;
            /// <summary>
            /// <para>A pointer to the base address of a range of pages allocated by the <a href="https://docs.microsoft.com/windows/desktop/api/memoryapi/nf-memoryapi-virtualalloc">VirtualAlloc</a> function. The page pointed to by the <b>BaseAddress</b> member is contained within this allocation range.</para>
            /// <para><see href="https://docs.microsoft.com/windows/win32/api//winnt/ns-winnt-memory_basic_information#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            public unsafe void* AllocationBase;
            /// <summary>
            /// <para>The memory protection option when the region was initially allocated. This member can be one of the <a href="https://docs.microsoft.com/windows/desktop/Memory/memory-protection-constants">memory protection constants</a> or 0 if the caller does not have access.</para>
            /// <para><see href="https://docs.microsoft.com/windows/win32/api//winnt/ns-winnt-memory_basic_information#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            public win32.System.Memory.PAGE_PROTECTION_FLAGS AllocationProtect;
            /// <summary>The size of the region beginning at the base address in which all pages have identical attributes, in bytes.</summary>
            public nuint RegionSize;
            /// <summary></summary>
            public win32.System.Memory.VIRTUAL_ALLOCATION_TYPE State;
            /// <summary>The access protection of the pages in the region. This member is one of the values listed for the <b>AllocationProtect</b> member.</summary>
            public win32.System.Memory.PAGE_PROTECTION_FLAGS Protect;
            /// <summary>
            /// <para>The type of pages in the region. The following types are defined.</para>
            /// <para></para>
            /// <para>This doc was truncated.</para>
            /// <para><see href="https://docs.microsoft.com/windows/win32/api//winnt/ns-winnt-memory_basic_information#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            public win32.System.Memory.PAGE_TYPE Type;
        }
    }
}
