name: .NET Core Desktop

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-latest

    env:
      Solution_Name: RemoteNET.sln
      Test_Project_Path: your-test-project-path                 # Replace with the path to your test project, i.e. MyWpfApp.Tests\MyWpfApp.Tests.csproj.
      Wap_Project_Directory: your-wap-project-directory-name    # Replace with the Wap project directory relative to the solution, i.e. MyWpfApp.Package.
      Wap_Project_Path: your-wap-project-path                   # Replace with the path to your Wap project, i.e. MyWpf.App.Package\MyWpfApp.Package.wapproj.

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Checkout submodule
      uses: Mushus/checkout-submodule@v1.0.1
      with:
        # A path of submodule directory
        submodulePath: .

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          7.0.x
          6.0.x
          5.0.x
          3.1.x

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    # Prepare Detours library
    - name: Prepare Detours library
      run: |
        cd src
        mkdir detours_build
        cd detours_build
        cmake ..\detours.net

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore the application
      run: |
        cd src
        msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Build
      run: |
        cd src
        msbuild $env:Solution_Name -target:RemoteNET:rebuild /p:Configuration=$env:Configuration /property:Platform=Mixed
      env:
        Configuration: ${{ matrix.configuration }}
